name: build-manjaro-stable
on:
  workflow_dispatch:
#  schedule:
#    - cron:  '30 2 * * 1'

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  KERNEL_REPO: 'rodriguezst/manjaro-kernel-nabu'
  KERNEL_REF: 'linux61-nabu'
  QBOOTCTL_REPO: 'rodriguezst/qbootctl-pkgbuild'
  QBOOTCTL_REF: 'main'
  FIRMWARE_REPO: 'rodriguezst/firmware-nabu-pkgbuild'
  FIRMWARE_REF: 'master'
  TWEAKS_REPO: 'rodriguezst/manjaro-nabu-tweaks'
  TWEAKS_REF: 'master'

jobs:
  kernel:
    name: Makepkg kernel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.KERNEL_REPO }}
          ref: ${{ env.KERNEL_REF }}
          fetch-depth: '1'

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt install \
            build-essential \
            gcc-aarch64-linux-gnu \
            libarchive-dev \
            libarchive-tools \
            meson

      - name: Install pacman
        shell: bash
        env:
          PACMAN_VERSION: 6.0.2
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/packages/core/pacman.git
          pushd pacman
            sudo wget https://sources.archlinux.org/other/pacman/pacman-${PACMAN_VERSION}.tar.xz
            sudo tar -xvf pacman-${PACMAN_VERSION}.tar.xz
            pushd pacman-${PACMAN_VERSION}
            #  sudo patch -p1 -i ../pacman-sync-first-option.patch Removed
              sudo meson --prefix=/usr \
                        --buildtype=plain \
                        -Ddoc=disabled \
                        -Ddoxygen=enabled \
                        -Dscriptlet-shell=/usr/bin/bash \
                        -Dldconfig=/usr/bin/ldconfig \
                        build
              sudo meson compile -C build
              sudo meson install -C build
            popd
            sudo install -m644 pacman.conf /etc/pacman.conf
            sudo install -m644 makepkg.conf /etc/
            sudo mkdir -p /etc/pacman.d
            sudo touch /etc/pacman.d/mirrorlist
          popd

      - name: Run makepkg
        shell: bash
        run: |
          cat << EOM | sudo tee -a /etc/makepkg.conf
          CARCH="aarch64"
          CHOST="aarch64-linux-gnu"
          export ARCH='arm64'
          export CROSS_COMPILE='aarch64-linux-gnu-'
          EOM
          makepkg -d

      - name: Copy Package Files
        run: |
          mkdir -p ./artifacts
          find . -type f -name '*.pkg.tar.*' -exec cp '{}' ./artifacts/ ';'

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: pkg-kernel
          path: ${{ github.workspace }}/artifacts/*
  
  qbootctl:
    name: Makepkg qbootctl
    runs-on: ubuntu-latest
    steps:
      - name: Checkout qbootctl repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.QBOOTCTL_REPO }}
          ref: ${{ env.QBOOTCTL_REF }}
          path: qbootctl
          fetch-depth: '1'
      -
        name: buildarmpkg
        uses: rodriguezst/manjaro-buildarmpkg-action@main
        with:
          pkgbuild-dir: ./qbootctl
          output-dir: ./artifacts
      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: pkg-qbootctl
          path: ${{ github.workspace }}/artifacts/*

  firmware:
    name: Makepkg firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout firmware-nabu repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.FIRMWARE_REPO }}
          ref: ${{ env.FIRMWARE_REF }}
          path: firmware
          fetch-depth: '1'
      -
        name: buildarmpkg
        uses: rodriguezst/manjaro-buildarmpkg-action@main
        with:
          pkgbuild-dir: ./firmware
          output-dir: ./artifacts
      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: pkg-firmware
          path: ${{ github.workspace }}/artifacts/*

  nabu-tweaks:
    name: Makepkg nabu-tweaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout nabu-tweaks repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TWEAKS_REPO }}
          ref: ${{ env.TWEAKS_REF }}
          path: tweaks
          fetch-depth: '1'
      -
        name: buildarmpkg
        uses: rodriguezst/manjaro-buildarmpkg-action@main
        with:
          pkgbuild-dir: ./tweaks
          output-dir: ./artifacts
      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: pkg-tweaks
          path: ${{ github.workspace }}/artifacts/*

  rootfs:
    name: Build RootFS Image
    runs-on: ubuntu-22.04
    needs: [kernel, qbootctl, firmware, nabu-tweaks]
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        DEVICE: [generic-efi]
        EDITION: [gnome,gnome-mobile,kde-plasma,plasma-mobile,phosh,minimal]
        BRANCH: [stable]
    steps:
      - uses: actions/checkout@v4
      -
        id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - 
        uses: actions/download-artifact@v4
        with:
          pattern: pkg-*
          merge-multiple: true
          path: ${{ github.workspace }}/packages
      -
        id: image-build
        uses: rodriguezst/manjaro-rootfs@master
        with:
          device: ${{ matrix.device }}
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          version: ${{ matrix.branch }}-${{ steps.time.outputs.time }}
          arm-profiles-repo: 'https://github.com/rodriguezst/manjaro-arm-profiles'
          arm-tools-repo: 'https://github.com/rodriguezst/manjaro-arm-tools'
          pkgdir: "packages"
          hostname: "nabu"
          #gpg-key: ${{ secrets.CI_GPG_SECRET }}
          #gpg-passphrase: ${{ secrets.CI_GPG_PASSPHRASE }}
      -
        name: Image customizations for nabu
        run: |
          sudo apt update && sudo apt install fdisk
          NEW_PATH=$(echo ${{ env.FILE_PATH }} | sed 's/${{ matrix.DEVICE }}/nabu/')
          mv ${{ env.FILE_PATH }} $NEW_PATH
          sudo ./scripts/update_fs.sh $NEW_PATH ${{ matrix.EDITION }}
      -
        name: Upload built artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          # Artifact name
          name: image-${{ matrix.EDITION }}-${{ matrix.BRANCH }}
          path: |
            *-rootfs.img.xz
            *-esp.img.xz
  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: rootfs
    steps:
      -
        id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - name: Download image artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: 'image-*'
          path: ./artifacts

      - name: Write release body
        run: |
          echo "The following Manjaro editions were successfuly built:" > ${{ github.workspace }}/RELEASE.md
          cd ./artifacts && ls -1 . >> ${{ github.workspace }}/RELEASE.md && cd ../
          sed -i 's/^image-/* /' ${{ github.workspace }}/RELEASE.md
          echo "**Build Log**: [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> ${{ github.workspace }}/RELEASE.md
      - 
        name: Make release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.time.outputs.time }}-stable-${{ github.run_id }}
          name: Manjaro ARM Stable (${{ steps.time.outputs.time }})
          bodyFile: ${{ github.workspace }}/RELEASE.md
          draft: false
          prerelease: true
          artifacts: artifacts/**/*.xz
