name: image_build_all-dev
on:
  workflow_dispatch:
#  schedule:
#    - cron:  '30 2 * * 1'

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  kernel:
    name: Build kernel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: 'rodriguezst/linux'
          ref: 'v6.1.10-nabu-maverickjb'
          fetch-depth: '1'

      - name: Install Dependencies
        run: sudo apt update && sudo apt install build-essential gcc-aarch64-linux-gnu bc flex bison 7zip kmod bash cpio binutils tar git wget dpkg libssl-dev

      - name: Build kernel
        run: |
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- xiaomi_nabu_maverick_defconfig
          make -j$(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- Image.gz dtbs
          mkdir -p ./install/boot
          _kernel_version="$(make kernelrelease -s)"
          cp arch/arm64/boot/Image.gz ./install/boot/vmlinuz-$_kernel_version
          cp arch/arm64/boot/dts/qcom/sm8150-xiaomi-nabu-maverick.dtb ./install/boot/dtb-$_kernel_version
          make ARCH=arm64 install INSTALL_PATH=./install/boot
          make ARCH=arm64 dtbs_install INSTALL_DTBS_PATH=./install/boot/dtbs
          make -j$(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- modules
          make ARCH=arm64 modules_install INSTALL_MOD_PATH=./install
          mkdir -p ./install/usr/ && mv ./install/lib ./install/usr/lib
          cd ./install && tar zcvf ../kernel.tar.gz . && cd ..

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4.0.0
        with:
          # Artifact name
          name: built_kernel
          path: ${{ github.workspace }}/kernel.tar.gz

  release:
    name: Build RootFS Image
    runs-on: ubuntu-22.04
    needs: kernel
    strategy:
      fail-fast: false
      matrix:
        DEVICE: [generic-efi]
        EDITION: [gnome,gnome-mobile,kde-plasma,plasma-mobile,phosh,minimal]
        BRANCH: [unstable]
    steps:
      - uses: actions/checkout@v4
      -
        id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - 
        uses: actions/download-artifact@v4
        with:
          pattern: built_kernel
      - 
        name: Unpack built kernel
        shell: bash
        run: |
          cd overlay && tar zxvf ../built_kernel/kernel.tar.gz && cd ../
          find overlay
      -
        id: image-build
        uses: manjaro-arm/rootfs@master
        with:
          device: ${{ matrix.device }}
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          version: ${{ steps.time.outputs.time }}
          #arm-profiles-repo: 'https://gitlab.manjaro.org/manjaro-arm/applications/arm-profiles'
          #gpg-key: ${{ secrets.CI_GPG_SECRET }}
          #gpg-passphrase: ${{ secrets.CI_GPG_PASSPHRASE }}
      -
        name: Image customizations for nabu
        run: |
          sudo apt update && sudo apt install fdisk qemu-system binfmt-support qemu-user-static
          sudo ./scripts/update_fs.sh ${{ env.FILE_PATH }}
      -
        name: Release assets
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          name: Dev ${{ steps.time.outputs.time }}
          draft: false
          prerelease: true
          files: |
            *-rootfs.img.xz
            *-esp.img.xz
