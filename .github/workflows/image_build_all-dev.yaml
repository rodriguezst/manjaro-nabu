name: build-manjaro-unstable
on:
  workflow_dispatch:
#  schedule:
#    - cron:  '30 2 * * 1'

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  KERNEL_REPO: 'rodriguezst/manjaro-kernel-nabu'
  KERNEL_REF: 'linux61-nabu'
  QBOOTCTL_REPO: 'rodriguezst/qbootctl-pkgbuild'
  QBOOTCTL_REF: 'main'

jobs:
  kernel:
    name: Build kernel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.KERNEL_REPO }}
          ref: ${{ env.KERNEL_REF }}
          fetch-depth: '1'

      -
        name: Makepkg Build and Check
        id: makepkg
        uses: rodriguezst/pkgbuild-arm64-action@v1
        with:
          makepkgArgs: -s
      - 
        name: Copy Package Files
        run: |
          mkdir -p ./artifacts
          find . -type f -name '*.pkg.tar.*' -exec cp '{}' ./artifacts/ ';'

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: pkg-kernel
          path: ${{ github.workspace }}/artifacts/*
  
  qbootctl:
    name: Build qbootctl
    runs-on: ubuntu-latest
    steps:
      - name: Checkout qbootctl repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.QBOOTCTL_REPO }}
          ref: ${{ env.QBOOTCTL_REF }}
          path: qbootctl
          fetch-depth: '1'
      -
        name: buildarmpkg
        uses: rodriguezst/manjaro-buildarmpkg-action@main
        with:
          pkgbuild-dir: ./qbootctl
          output-dir: ./artifacts
      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: pkg-qbootctl
          path: ${{ github.workspace }}/artifacts/*

  rootfs:
    name: Build RootFS Image
    runs-on: ubuntu-22.04
    needs: [kernel, qbootctl]
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        DEVICE: [generic-efi]
        EDITION: [gnome,gnome-mobile,gnome-mobile-dev,kde-plasma,plasma-mobile,plasma-mobile-dev,phosh,mate,xfce,lomiri,maui-shell,minimal]
        BRANCH: [unstable]
    steps:
      - uses: actions/checkout@v4
      -
        id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - 
        uses: actions/download-artifact@v4
        with:
          pattern: pkg-*
          merge-multiple: true
          path: ${{ github.workspace }}/packages
      -
        id: image-build
        uses: rodriguezst/manjaro-rootfs@master
        with:
          device: ${{ matrix.device }}
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          version: ${{ matrix.branch }}-${{ steps.time.outputs.time }}
          arm-profiles-repo: 'https://github.com/rodriguezst/manjaro-arm-profiles'
          pkgdir: "packages"
          hostname: "nabu"
          #gpg-key: ${{ secrets.CI_GPG_SECRET }}
          #gpg-passphrase: ${{ secrets.CI_GPG_PASSPHRASE }}
      -
        name: Image customizations for nabu
        run: |
          sudo apt update && sudo apt install fdisk
          NEW_PATH=$(echo ${{ env.FILE_PATH }} | sed 's/${{ matrix.DEVICE }}/nabu/')
          mv ${{ env.FILE_PATH }} $NEW_PATH
          sudo ./scripts/update_fs.sh $NEW_PATH ${{ matrix.EDITION }}
      -
        name: Upload built artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          # Artifact name
          name: image-${{ matrix.EDITION }}-${{ matrix.BRANCH }}
          path: |
            *-rootfs.img.xz
            *-esp.img.xz
  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: rootfs
    steps:
      -
        id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - name: Download image artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: 'image-*'
          path: ./artifacts

      - name: Write release body
        run: |
          echo "The following Manjaro editions were successfuly built:" > ${{ github.workspace }}/RELEASE.md
          cd ./artifacts && ls -1 . >> ${{ github.workspace }}/RELEASE.md && cd ../
          sed -i 's/^image-/* /' ${{ github.workspace }}/RELEASE.md
          echo "**Build Log**: [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> ${{ github.workspace }}/RELEASE.md
      - 
        name: Make release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.time.outputs.time }}-unstable-${{ github.run_id }}
          name: Manjaro ARM Unstable (${{ steps.time.outputs.time }})
          bodyFile: ${{ github.workspace }}/RELEASE.md
          draft: false
          prerelease: true
          artifacts: artifacts/**/*.xz
